
Allocating common symbols
Common symbol       size              file

buf                 0x50              echo.o

Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x0000000000000000 0x0000000000040000 xr
RAM              0x0000000020000000 0x0000000000004000 xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD echo.o
LOAD startup.o
LOAD /Users/Cara/Desktop/CodeStuff/Hilary2020/digisys/gcc-arm-none-eabi-9-2019-q4-major/bin/../lib/gcc/arm-none-eabi/9.2.1/thumb/v6-m/nofp/libgcc.a

.text           0x0000000000000000      0x3f4
 *(.vectors)
 .vectors       0x0000000000000000       0xc0 startup.o
                0x0000000000000000                __vectors
 *(.text*)
 .text          0x00000000000000c0      0x198 echo.o
                0x00000000000000c0                serial_init
                0x000000000000014c                serial_getc
                0x000000000000016c                serial_putc
                0x0000000000000198                serial_puts
                0x00000000000001b0                accept
                0x000000000000021c                init
 .text          0x0000000000000258      0x178 startup.o
                0x0000000000000258                nmi_handler
                0x0000000000000258                ecb_handler
                0x0000000000000258                hardfault_handler
                0x0000000000000258                uart_handler
                0x0000000000000258                lpcomp_handler
                0x0000000000000258                systick_handler
                0x0000000000000258                timer0_handler
                0x0000000000000258                swi0_handler
                0x0000000000000258                rtc0_handler
                0x0000000000000258                rtc1_handler
                0x0000000000000258                swi4_handler
                0x0000000000000258                timer2_handler
                0x0000000000000258                timer1_handler
                0x0000000000000258                wdt_handler
                0x0000000000000258                swi5_handler
                0x0000000000000258                svc_handler
                0x0000000000000258                swi1_handler
                0x0000000000000258                qdec_handler
                0x0000000000000258                spi0_twi0_handler
                0x0000000000000258                rng_handler
                0x0000000000000258                temp_handler
                0x0000000000000258                power_clock_handler
                0x0000000000000258                gpiote_handler
                0x0000000000000258                swi2_handler
                0x0000000000000258                ccm_aar_handler
                0x0000000000000258                pendsv_handler
                0x0000000000000258                spin
                0x0000000000000258                swi3_handler
                0x0000000000000258                spi1_twi1_handler
                0x0000000000000258                radio_handler
                0x0000000000000258                adc_handler
                0x00000000000002a0                __reset
                0x0000000000000330                irq_priority
                0x0000000000000390                enable_irq
                0x00000000000003a0                disable_irq
                0x00000000000003b0                clear_pending
                0x00000000000003c0                reschedule
 *(.rodata*)
 .rodata.str1.4
                0x00000000000003d0       0x24 echo.o
                                         0x28 (size before relaxing)
                0x00000000000003f4                . = ALIGN (0x4)
                0x00000000000003f4                __etext = .

.glue_7         0x00000000000003f4        0x0
 .glue_7        0x00000000000003f4        0x0 linker stubs

.glue_7t        0x00000000000003f4        0x0
 .glue_7t       0x00000000000003f4        0x0 linker stubs

.vfp11_veneer   0x00000000000003f4        0x0
 .vfp11_veneer  0x00000000000003f4        0x0 linker stubs

.v4_bx          0x00000000000003f4        0x0
 .v4_bx         0x00000000000003f4        0x0 linker stubs

.iplt           0x00000000000003f4        0x0
 .iplt          0x00000000000003f4        0x0 echo.o

.rel.dyn        0x00000000000003f4        0x0
 .rel.iplt      0x00000000000003f4        0x0 echo.o

.data           0x0000000020000000        0x0 load address 0x00000000000003f4
                0x0000000020000000                __data_start = .
 *(.data*)
 .data          0x0000000020000000        0x0 echo.o
 .data          0x0000000020000000        0x0 startup.o
                0x0000000020000000                . = ALIGN (0x4)
                0x0000000020000000                __data_end = .

.igot.plt       0x0000000020000000        0x0 load address 0x00000000000003f4
 .igot.plt      0x0000000020000000        0x0 echo.o

.bss            0x0000000020000000       0x54 load address 0x00000000000003f4
                0x0000000020000000                __bss_start = .
 *(.bss*)
 .bss           0x0000000020000000        0x4 echo.o
 .bss           0x0000000020000004        0x0 startup.o
 *(COMMON)
 COMMON         0x0000000020000004       0x50 echo.o
                0x0000000020000004                buf
                0x0000000020000054                . = ALIGN (0x4)
                0x0000000020000054                __bss_end = .
                0x0000000020000054                __end = .
                0x0000000020004000                __stack = (ORIGIN (RAM) + LENGTH (RAM))
                0x0000000020003800                __stack_limit = (__stack - 0x800)
                0x0000000000000001                ASSERT ((__stack_limit >= __end), region RAM overlaps with stack)
OUTPUT(echo.elf elf32-littlearm)

.debug_info     0x0000000000000000      0x3f7
 .debug_info    0x0000000000000000      0x21b echo.o
 .debug_info    0x000000000000021b      0x1dc startup.o

.debug_abbrev   0x0000000000000000      0x26e
 .debug_abbrev  0x0000000000000000      0x14a echo.o
 .debug_abbrev  0x000000000000014a      0x124 startup.o

.debug_loc      0x0000000000000000      0x198
 .debug_loc     0x0000000000000000       0xa7 echo.o
 .debug_loc     0x00000000000000a7       0xf1 startup.o

.debug_aranges  0x0000000000000000       0x40
 .debug_aranges
                0x0000000000000000       0x20 echo.o
 .debug_aranges
                0x0000000000000020       0x20 startup.o

.debug_line     0x0000000000000000      0x3c5
 .debug_line    0x0000000000000000      0x1f4 echo.o
 .debug_line    0x00000000000001f4      0x1d1 startup.o

.debug_str      0x0000000000000000      0x1b6
 .debug_str     0x0000000000000000      0x115 echo.o
                                        0x11a (size before relaxing)
 .debug_str     0x0000000000000115       0xa1 startup.o
                                        0x171 (size before relaxing)

.comment        0x0000000000000000       0x79
 .comment       0x0000000000000000       0x79 echo.o
                                         0x7a (size before relaxing)
 .comment       0x0000000000000079       0x7a startup.o

.ARM.attributes
                0x0000000000000000       0x2c
 .ARM.attributes
                0x0000000000000000       0x2c echo.o
 .ARM.attributes
                0x000000000000002c       0x2c startup.o

.debug_frame    0x0000000000000000      0x124
 .debug_frame   0x0000000000000000       0x90 echo.o
 .debug_frame   0x0000000000000090       0x94 startup.o
